{"version":3,"sources":["serviceWorker.js","component/EnhancedTableToolbar.js","component/EnhancedTableHead.js","component/EnhancedTable.js","api.js","util.js","Teams.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","numSelected","classes","Toolbar","className","clsx","Typography","variant","component","id","EnhancedTableHead","props","order","orderBy","onRequestSort","TableHead","TableRow","headCells","map","headCell","TableCell","key","align","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","visuallyHidden","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","orderByProp","rows","keyProp","React","useState","setOrder","setOrderBy","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","a","b","stableSort","descendingComparator","getComparator","slice","row","hover","tabIndex","header","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","HOST","fetchJson","url","fetch","then","response","json","fetchTeams","scaleValues","object","propertyName","max","Number","MAX_VALUE","Object","keys","forEach","round","values","team","winEfficiency","wins","expectedQuality19_20","teamName","Teams","undefined","teams","setTeams","useEffect","getTeams","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb79057c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nexport const EnhancedTableToolbar = ({ numSelected, title = 'Teams'}) => {\n    const classes = useStyles();\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    {title}\n                </Typography>\n            )}\n\n            {/*{numSelected > 0 ? (*/}\n            {/*    <Tooltip title=\"Delete\">*/}\n            {/*        <IconButton aria-label=\"delete\">*/}\n            {/*            <DeleteIcon />*/}\n            {/*        </IconButton>*/}\n            {/*    </Tooltip>*/}\n            {/*) : (*/}\n            {/*    <Tooltip title=\"Filter list\">*/}\n            {/*        <IconButton aria-label=\"filter list\">*/}\n            {/*            <FilterListIcon />*/}\n            {/*        </IconButton>*/}\n            {/*    </Tooltip>*/}\n            {/*)}*/}\n        </Toolbar>\n    );\n};\n","import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport function EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {props.headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            <b>{headCell.label}</b>\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {EnhancedTableToolbar} from './EnhancedTableToolbar';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport {EnhancedTableHead} from './EnhancedTableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function EnhancedTable({orderBy: orderByProp, rows, keyProp, headCells}) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('desc');\n    const [orderBy, setOrderBy] = React.useState(orderByProp);\n    const [page, setPage] = React.useState(0);\n    const [dense/*, setDense*/] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(30);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    //\n    // const handleChangeDense = (event) => {\n    //     setDense(event.target.checked);\n    // };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar/>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            headCells={headCells}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={row[keyProp]}\n                                        >\n                                            {headCells.map((header, index) => <TableCell key={index}>{row[header.id]}</TableCell>)}\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height: (dense ? 33 : 53) * emptyRows}}>\n                                    <TableCell colSpan={6}/>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 30]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {/*<FormControlLabel*/}\n            {/*    control={<Switch checked={dense} onChange={handleChangeDense}/>}*/}\n            {/*    label=\"Dense padding\"*/}\n            {/*/>*/}\n        </div>\n    );\n}\n\nEnhancedTable.propTypes = {\n    orderBy: PropTypes.string.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    rows: PropTypes.array.isRequired,\n    headCells: PropTypes.array.isRequired\n};\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n","// const HOST = 'http://localhost:5000';\nconst HOST = 'https://ratings-2k-be-tumozo4dqa-ts.a.run.app';\n\nconst fetchJson = (url) => fetch(url).then((response) => response.json());\n\nexport const fetchTeams = () => fetchJson(`${HOST}/api/team`);\nexport const fetchPlayers = () => fetchJson(`${HOST}/api/player`);\n","\nexport function scaleValues(object, propertyName) {\n    let\n        max = Number.MAX_VALUE * -1,\n        min = Number.MAX_VALUE;\n    Object.keys(object).forEach((key) => {\n        const property = object[key][propertyName];\n        if (property < min) {\n            min = property;\n        }\n        if (property > max) {\n            max = property;\n        }\n    });\n    Object.keys(object).forEach((key) => {\n        object[key][propertyName] = Math.round(10000 * (object[key][propertyName] - min) / (max - min)) / 100;\n    });\n}\n","import React from 'react';\nimport EnhancedTable from './component/EnhancedTable';\nimport {fetchTeams} from './api';\nimport {scaleValues} from './util';\n\nasync function getTeams() {\n    const response = await fetchTeams();\n    Object.values(response).forEach((team) => team.winEfficiency = team.wins / team.expectedQuality19_20);\n    Object.keys(response).forEach((teamName) => response[teamName].team = teamName);\n    scaleValues(response, 'winEfficiency');\n    scaleValues(response, 'expectedQuality19_20');\n    scaleValues(response, 'rating2k');\n    return Object.values(response);\n}\n\nconst headCells = [\n    {id: 'team', label: 'Team'},\n    {id: 'winEfficiency', label: 'Win Efficiency'},\n    {id: 'expectedQuality19_20', label: '2019-20 Value'},\n    {id: 'wins', label: 'Wins'},\n    {id: 'rating2k', label: 'Current Rating'},\n];\n\nexport default function Teams() {\n    const [teams, setTeams] = React.useState(undefined);\n\n    React.useEffect(() => {\n        getTeams().then((response) => setTeams(response));\n    }, []);\n\n    return teams ?\n        <EnhancedTable\n            orderBy='winEfficiency'\n            keyProp='team'\n            rows={teams}\n            headCells={headCells}\n        /> :\n        <h1>Loading</h1>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Teams from './Teams';\n\nReactDOM.render(\n  <React.StrictMode>\n    < Teams/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}